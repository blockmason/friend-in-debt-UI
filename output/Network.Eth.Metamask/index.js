// Generated by purs version 0.11.5
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Data_Either = require("../Data.Either");
var Data_Maybe = require("../Data.Maybe");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var LoggedOut = (function () {
    function LoggedOut() {

    };
    LoggedOut.value = new LoggedOut();
    return LoggedOut;
})();
var LoggedIn = (function () {
    function LoggedIn() {

    };
    LoggedIn.value = new LoggedIn();
    return LoggedIn;
})();
var showMetamaskStatus = new Data_Show.Show(function (val) {
    if (val instanceof LoggedOut) {
        return "Metamask is logged out.";
    };
    if (val instanceof LoggedIn) {
        return "Metamask is logged in.";
    };
    throw new Error("Failed pattern match at Network.Eth.Metamask line 21, column 14 - line 25, column 1: " + [ val.constructor.name ]);
});
var loggedIn = function (mms) {
    if (mms instanceof LoggedOut) {
        return false;
    };
    if (mms instanceof LoggedIn) {
        return true;
    };
    throw new Error("Failed pattern match at Network.Eth.Metamask line 26, column 16 - line 28, column 19: " + [ mms.constructor.name ]);
};
var checkStatus = function __do() {
    var v = $foreign.checkStatusImpl("has to pass a variable")();
    if (v) {
        return LoggedIn.value;
    };
    return LoggedOut.value;
};
module.exports = {
    LoggedOut: LoggedOut, 
    LoggedIn: LoggedIn, 
    checkStatus: checkStatus, 
    loggedIn: loggedIn, 
    showMetamaskStatus: showMetamaskStatus
};
