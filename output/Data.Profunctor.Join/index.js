// Generated by purs version 0.11.5
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Join = function (x) {
    return x;
};
var showJoin = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Join " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupJoin = function (dictSemigroupoid) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Control_Semigroupoid.compose(dictSemigroupoid)(v)(v1);
        };
    });
};
var ordJoin = function (dictOrd) {
    return dictOrd;
};
var newtypeJoin = new Data_Newtype.Newtype(function (n) {
    return n;
}, Join);
var monoidJoin = function (dictCategory) {
    return new Data_Monoid.Monoid(function () {
        return semigroupJoin(dictCategory.Semigroupoid0());
    }, Control_Category.id(dictCategory));
};
var invariantJoin = function (dictProfunctor) {
    return new Data_Functor_Invariant.Invariant(function (f) {
        return function (g) {
            return function (v) {
                return Data_Profunctor.dimap(dictProfunctor)(g)(f)(v);
            };
        };
    });
};
var eqJoin = function (dictEq) {
    return dictEq;
};
module.exports = {
    Join: Join, 
    newtypeJoin: newtypeJoin, 
    eqJoin: eqJoin, 
    ordJoin: ordJoin, 
    showJoin: showJoin, 
    semigroupJoin: semigroupJoin, 
    monoidJoin: monoidJoin, 
    invariantJoin: invariantJoin
};
