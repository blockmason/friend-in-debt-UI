// Generated by purs version 0.11.5
"use strict";
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Aff_Bus = require("../Control.Monad.Aff.Bus");
var Control_Monad_Eff_Console = require("../Control.Monad.Eff.Console");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Random = require("../Control.Monad.Eff.Random");
var Control_Monad_Eff_Timer = require("../Control.Monad.Eff.Timer");
var Data_Format_Money = require("../Data.Format.Money");
var Data_Int = require("../Data.Int");
var Data_Map = require("../Data.Map");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var FriendInDebt_Prelude = require("../FriendInDebt.Prelude");
var Network_Eth_FriendInDebt = require("../Network.Eth.FriendInDebt");
var Network_Eth_Metamask = require("../Network.Eth.Metamask");
var Network_HTTP_Affjax = require("../Network.HTTP.Affjax");
var FIDError = (function () {
    function FIDError(value0) {
        this.value0 = value0;
    };
    FIDError.create = function (value0) {
        return new FIDError(value0);
    };
    return FIDError;
})();
var CheckMetamask = (function () {
    function CheckMetamask() {

    };
    CheckMetamask.value = new CheckMetamask();
    return CheckMetamask;
})();
var showContainerMsg = new Data_Show.Show(function (v) {
    if (v instanceof FIDError) {
        return Data_Show.show(Network_Eth_FriendInDebt.showError)(v.value0);
    };
    if (v instanceof CheckMetamask) {
        return "Checking Metamask status.";
    };
    throw new Error("Failed pattern match at Types line 30, column 3 - line 30, column 31: " + [ v.constructor.name ]);
});
module.exports = {
    FIDError: FIDError, 
    CheckMetamask: CheckMetamask, 
    showContainerMsg: showContainerMsg
};
